# -*- cmake -*-
# This is the cmake configuration to run all examples
# built from @CMAKE_SOURCE_DIR@/cmake/CMakeListsForExamples.cmake
SET(EXAMPLE @EXAMPLE@)

SET(SANITIZER @USE_SANITIZER@)
# msan slow things down quite a bit ...
IF(SANITIZER MATCHES "msan")
  SET(DART_TESTING_TIMEOUT 3600)
ENDIF(SANITIZER MATCHES "msan")

SET(CROSSCOMPILING_LINUX_TO_WINDOWS @CROSSCOMPILING_LINUX_TO_WINDOWS@)

ENABLE_TESTING()

#------------------------------------------
# Append a ctest test.
# Usage:
# add_example(name source_file)
#------------------------------------------
MACRO(ADD_EXAMPLE _N _EX)
  MESSAGE("Adding example ${_N} (${_EX})")

  IF(CROSSCOMPILING_LINUX_TO_WINDOWS)
    ADD_TEST(${_N} wine ${_EX}.exe)
  ELSE()
    ADD_TEST(${_N} "${_EX}")
  ENDIF()

  IF (APPLE)
    SET_TESTS_PROPERTIES(${_N} PROPERTIES ENVIRONMENT DYLD_LIBRARY_PATH=$ENV{DYLD_LIBRARY_PATH}:@SiconosKernel_LIBRARY_DIRS@:.)
  ELSEIF(CMAKE_SYSTEM_NAME MATCHES Windows)
    SET_TESTS_PROPERTIES(${_N} PROPERTIES ENVIRONMENT "Path=@SiconosKernel_LIBRARY_DIRS@\;@ENV_PATH@")
  ELSE() # unix
    SET_TESTS_PROPERTIES(${_N} PROPERTIES ENVIRONMENT LD_LIBRARY_PATH=$ENV{LD_LIBRARY_PATH}:@SiconosKernel_LIBRARY_DIRS@:.)
  ENDIF()

  SET_TESTS_PROPERTIES(${_N} PROPERTIES FAIL_REGULAR_EXPRESSION "FAILURE;Exception;failed;ERROR")
ENDMACRO(ADD_EXAMPLE _N _EX)


IF(NOT EXAMPLE MATCHES Plugin)
  SET(TEST_ME TRUE)
  # Remove unwanted tests from list
  FOREACH(_NT ${NO_TEST_FILES})
    IF(EXAMPLE MATCHES "${_NT}")
      SET(TEST_ME FALSE)
    ENDIF()
  ENDFOREACH()
  
  IF(TEST_ME)
    GET_FILENAME_COMPONENT(EXAMPLE_PATH ${EXAMPLE} DIRECTORY)
    GET_FILENAME_COMPONENT(EXAMPLE_NAME ${EXAMPLE} NAME_WE)
    # Copy data files
    FILE(GLOB EXAMPLES_REF ${EXAMPLE_PATH}/*.ref)
    FOREACH(_F ${EXAMPLES_REF})
      GET_FILENAME_COMPONENT(EXAMPLE_REF ${_F} NAME)
      CONFIGURE_FILE(${_F} ${CMAKE_CURRENT_BINARY_DIR}/${EXAMPLE_REF}  COPYONLY)
    ENDFOREACH()
    ADD_CUSTOM_COMMAND(OUTPUT ${EXAMPLE_NAME}
      COMMAND "run_siconos" --generator="${CMAKE_GENERATOR}" --noexec "${EXAMPLE}" --build-dir build -DCMAKE_TOOLCHAIN_FILE="${CMAKE_TOOLCHAIN_FILE}")
    GET_FILENAME_COMPONENT(EXAMPLE_DIR ${EXAMPLE} DIRECTORY)
    GET_FILENAME_COMPONENT(EXAMPLE_UPDIR ${EXAMPLE_DIR} NAME)
    SET(EX_TARGET "${EXAMPLE_UPDIR}-${EXAMPLE_NAME}-target")
    ADD_CUSTOM_TARGET(${EX_TARGET} ALL DEPENDS ${EXAMPLE_NAME})
    ADD_EXAMPLE(${EXAMPLE_NAME} ${EXAMPLE_NAME})
  ENDIF()
ENDIF()

