#!/usr/bin/env ${PYTHON_EXECUTABLE}

import sys
import os
from subprocess import check_call
import subprocess
import posixpath
import platform

def returnWinePrefix():
    if 'WINEPREFIX' in os.environ:
        return os.environ['WINEPREFIX']
    else:
        return os.getenv('HOME', default='') + "/.wine"


# 2. test command
if "${EMULATOR}" == "":
    args = []
else:
    args = ["${EMULATOR}"]

env = os.environ
env["PYTHONPATH"] = posixpath.join("${DRIVE_LETTER}${CMAKE_BINARY_DIR}", "src",
                    "swig") + "${VAR_SEPARATOR}" + posixpath.join(
                    "${DRIVE_LETTER}${CMAKE_CURRENT_SOURCE_DIR}", "Siconos",
                    "functions") + "${VAR_SEPARATOR}" + os.getenv('PYTHONPATH', default='')
env["PYTHONDONTWRITEBYTECODE"] = "1"
env["LD_LIBRARY_PATH"] = os.path.curdir + ':' + os.getenv('LD_LIBRARY_PATH', default='')
env["DYLD_LIBRARY_PATH"] = os.path.curdir + ':' + os.getenv('DYLD_LIBRARY_PATH', default='')
env["WINEPREFIX"] = returnWinePrefix()


args.extend(["py.test", "-v", sys.argv[1]])

if 'Windows' in platform.uname():
    use_shell = True
    env["PATH"] =  r"${SICONOS_NUMERICS_PATH};" + r"${ENV_PATH_FOR_RUNTEST}"
else:
    use_shell = False

check_call(args, env=env, shell=use_shell)
