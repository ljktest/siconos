# -*- python -*-

import os
from pyplusplus import module_builder
from pyplusplus.module_builder import call_policies
from pygccxml import declarations
from doxygen import doxygen_doc_extractor

#Creating an instance of class that will help you to expose your
#declarations
mb = module_builder.module_builder_t( [ @PYH@ ]
                                      , include_paths=['@SiconosKernel_INCLUDE_DIRS@', 
                                                       '@SiconosNumerics_INCLUDE_DIRS@', 
                                                       '@ATLAS_INCLUDE_DIR@', 
                                                       '@LIBXML2_INCLUDE_DIR@' ]
                                      , working_directory = r"."
                                      , define_symbols=[] )

#Well, don't you want to see what is going on?
#mb.print_declarations()

#a problem with createSPtrConst
#SPtrConstDecls = mb.decls( lambda decl: decl.name.startswith( 'createSPtrConst' ) )
#SPtrConstDecls.exclude()

funs = mb.calldefs()

funs.create_with_signature = True
for mem_fun in funs:
    if mem_fun.call_policies:
        continue
    
    # References and pointers
    if (not mem_fun.call_policies) and (declarations.is_reference(mem_fun.return_type)or (declarations.is_pointer (mem_fun.return_type)) ):
        mem_fun.call_policies = call_policies.return_value_policy(call_policies.reference_existing_object )
        
        
#Creating code creator. After this step you should not
#modify/customize declarations.
mb.build_code_creator( module_name='Siconos', doc_extractor=doxygen_doc_extractor() )

mb.code_creator.license = """/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
 """

#Writing code to file.
mb.write_module( os.path.join( os.path.abspath('.'), '@_HN@Bindings.cpp' ) )
