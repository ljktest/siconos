PROJECT(Siconos CXX)

SET(Siconos_VERSION "${VERSION}")

COMPILE_WITH(SiconosKernel REQUIRED)
COMPILE_WITH(SiconosNumerics REQUIRED)
COMPILE_WITH(BLAS REQUIRED)
COMPILE_WITH(LAPACK REQUIRED)
COMPILE_WITH(ATLAS REQUIRED)
COMPILE_WITH(LibXml2 REQUIRED)
COMPILE_WITH(PythonLibs REQUIRED)

INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})

SET(Siconos_DIRS ${SiconosKernel_INCLUDE_DIRS})

# boost 3.8
# Determine extra libraries we need to link against to build Python
# extension modules.
if(CMAKE_SYSTEM_NAME STREQUAL "SunOS")
  set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "dl")
  if(CMAKE_COMPILER_IS_GNUCXX)
    set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "rt")
  endif(CMAKE_COMPILER_IS_GNUCXX)
elseif(CMAKE_SYSTEM_NAME MATCHES ".*BSD")
  set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "pthread")
elseif(CMAKE_SYSTEM_NAME STREQUAL "DragonFly")
  # DragonFly is a variant of FreeBSD
  set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "pthread")
elseif(CMAKE_SYSTEM_NAME STREQUAL "OSF")
  set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "pthread" "dl")
  if(CMAKE_COMPILER_IS_GNUCXX)
    set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "rt")
  endif(CMAKE_COMPILER_IS_GNUCXX)    
elseif(CMAKE_SYSTEM_NAME STREQUAL "QNX")
  # No options necessary for QNX
elseif(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
  # No options necessary for Mac OS X
elseif(CMAKE_SYSTEM_NAME STREQUAL "HP-UX")
  set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "rt")
elseif(UNIX)
  # Assume -pthread and -ldl on all other variants
  set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "pthread" "dl")
  if(CMAKE_COMPILER_IS_GNUCXX)
    set(PYTHON_LIBRARIES ${PYTHON_LIBRARIES} "util")
  endif(CMAKE_COMPILER_IS_GNUCXX)    
endif(CMAKE_SYSTEM_NAME STREQUAL "SunOS")

# a verification
FOREACH(_lib ${PYTHON_LIBRARIES})
  FIND_LIBRARY(_FOUND ${_lib})
  IF(NOT _FOUND)
    MESSAGE(FATAL_ERROR "cannot found library ${_lib}")
  ENDIF(NOT _FOUND)
ENDFOREACH(_lib ${PYTHON_LIBRARIES})

CONFIGURE_FILE(code-generator.py.in ${CMAKE_CURRENT_BINARY_DIR}/code-generator.py)

ADD_CUSTOM_TARGET(SiconosBindings.cpp ALL)

ADD_CUSTOM_COMMAND(TARGET SiconosBindings.cpp
  COMMAND python ${CMAKE_CURRENT_BINARY_DIR}/code-generator.py
  OUTPUTS ${CMAKE_CURRENT_BINARY_DIR}/SiconosBindings.cpp
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/code-generator.py)



ADD_LIBRARY(Siconos ${CMAKE_CURRENT_BINARY_DIR}/SiconosBindings.cpp)

ADD_DEPENDENCIES(Siconos SiconosBindings.cpp)

SET_TARGET_PROPERTIES(Siconos PROPERTIES PREFIX "" LINKER_LANGUAGE CXX)
TARGET_LINK_LIBRARIES(Siconos ${PYTHON_LIBRARIES})
