
COMPILE_WITH(SiconosKernel REQUIRED)
COMPILE_WITH(SiconosNumerics REQUIRED)
COMPILE_WITH(BLAS REQUIRED)
COMPILE_WITH(LAPACK REQUIRED)
COMPILE_WITH(ATLAS REQUIRED)
COMPILE_WITH(LibXml2 REQUIRED)
COMPILE_WITH(PythonLibs REQUIRED)
COMPILE_WITH(Boost REQUIRED)

SET(SICONOS_HEADERS ${SiconosKernel_INCLUDE_DIRS}/SiconosKernel.hpp)

CONFIGURE_FILE(doxygen.py ${CMAKE_CURRENT_BINARY_DIR}/doxygen.py COPYONLY)

SET(PYH)
FOREACH(_H ${SICONOS_HEADERS})
  IF(PYH)
    SET(PYH "${PYH},'${_H}'")
  ELSE(PYH)
    SET(PYH "'${_H}'")
  ENDIF(PYH)
ENDFOREACH(_H ${SICONOS_HEADERS})

CONFIGURE_FILE(SiconosGenerator.py.in ${CMAKE_CURRENT_BINARY_DIR}/SiconosGenerator.py)
CONFIGURE_FILE(CMakeLists.txt.in ${CMAKE_CURRENT_BINARY_DIR}/Siconos/CMakeLists.txt @ONLY)


ADD_CUSTOM_COMMAND(
  COMMAND python 
  ARGS SiconosGenerator.py
  OUTPUT Siconos
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  MAIN_DEPENDENCY ${SICONOS_HEADERS}
  DEPENDS SiconosGenerator.py)

ADD_CUSTOM_COMMAND(
  TARGET generated-cmake
  COMMAND cmake 
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/Siconos
  MAIN_DEPENDENCY Siconos)

ADD_CUSTOM_COMMAND(
  TARGET generated-make
  COMMAND make 
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/Siconos
  MAIN_DEPENDENCY generated-cmake)

#
# Log 
#

IF(PRINT_ENV)
  INCLUDE(CMakeLog)
ENDIF(PRINT_ENV)

IF(PRINT_VAR)
  MESSAGE(STATUS)
  PRINT_VAR(${PRINT_VAR})
  MESSAGE(STATUS)
ENDIF(PRINT_VAR)
