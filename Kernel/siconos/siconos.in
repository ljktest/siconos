#!/bin/bash
# Siconos-Kernel version 3.0.0, Copyright INRIA 2005-2008.
# Siconos is a program dedicated to modeling, simulation and control
# of non smooth dynamical systems.	
# Siconos is a free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# Siconos is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Siconos; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# Contact: Vincent ACARY vincent.acary@inrialpes.fr 
#	

#-----------
# Variables
#-----------

DIR=`pwd`;
SICONOSPATH=@prefix@
NUMERICSPATH=@NUMERICS_PATH@

# siconos shared files (xml_schema, KernelConfig, DefaultPlugin .so ...) location.
SICONOS_SHAREPATH=$SICONOSPATH/share/siconos-kernel; 


#-----------
# functions
#-----------

function compilePlugins() {
    listdir=`find . -type d`;
    for dir in $listdir; do
	cd $dir;
	if test "`ls *Plugin.cpp 2>/dev/null`" != ""; then
	    if test "${silent}" = "true"; then
		make -s -f $SICONOS_SHAREPATH/MakefilePluginSample plugin
	    else
		echo " ***** Plug-in management *****"
		echo;
		echo " --> Plug-in files location is $dir ";      
		echo;
		echo " Creation of the xxxPlugin.so file   ..."
		echo;
		make -f $SICONOS_SHAREPATH/MakefilePluginSample plugin
	    fi;
	    if test "${LD_LIBRARY_PATH}test" = "test"; then
		export LD_LIBRARY_PATH=$PWD;
	    else
		export LD_LIBRARY_PATH=$PWD:$LD_LIBRARY_PATH; 
	    fi;
	fi;
	cd $DIR;
    done;
    #echo "LD_LIBRARY_PATH = $LD_LIBRARY_PATH";
}

function cleanAll() {
    listdir=`find . -type d`;
    for dir in $listdir; do
	cd $dir;
	if test "${silent}" = "true"; then
	    make -s -f $SICONOS_SHAREPATH/MakefilePluginSample clean;
	else
	    make -f $SICONOS_SHAREPATH/MakefilePluginSample clean;
	fi;	    
	cd $DIR;
    done;
    echo " --> Cleaning ok.";
}

function cartridge() {
    echo;
    echo "|=============================================================================|";
    echo "| Siconos-Kernel version 2.1.2 (temporary release), Copyright INRIA 2005-2008.|";
    echo "|                                                                             |";
    echo "|     Free software under GNU General Public License.                         |";
    echo "|=============================================================================|"; 
    echo;
}

#------
# main
#------

cartridge;

# Get siconos command options
clean="false";
silent="true";
sample="false";
target="sample run";
while getopts chvx OPTION
  do
  case "$OPTION" in
      c) clean=true;;
      v) silent=false;
	  if [ $# -eq 2 ]; then
	      if [ ! -f $2 ]; then
		  echo "$2: file not found.";
		  sample="false"
		  exit 1;
	      else
		  sample="true"
	      fi;
	  else sample="false"
	  fi;;
      h) echo "Run siconos YourSample.cpp or location/YourSample.cpp to compile, link and run a program.";
	  echo "Other options are: ";
	 echo "     -c : to clean the current directory (deletes binary files, etc.)";
	 echo "     -h : to print this help.";
	 echo "     -v : to print 'make' commands as they are executed.";
         echo "     -x : compile only.";
	 exit 0;
         ;;
      x) sample="true" ; target="sample";;
  esac
done


# Clean action (ie call siconos -c)
if "$clean" = "true"; then
    if [ $# -eq 2 ]; then
	if [ ! -d $2 ]; then
	    echo "/!\ clean $2 -> no such file or directory. /!\ ";
	    exit 1;
	else
	    cd $2;
	    cleanAll;
	    cd ..;
	    exit 0;
	fi;	    
    else	
	cleanAll;
	exit 0;
    fi;
else
# parameters and paths settings
export SICONOSPATH=$SICONOSPATH;
if test "$SICONOSPATH" = ""; then
    echo " /!\ SICONOSPATH undefined => stop /!\ ";
    exit 1;
fi;
export NUMERICSPATH=$NUMERICSPATH;
if test "$NUMERICSPATH" = ""; then
    echo " /!\ NUMERICSPATH undefined => stop /!\ ";
    exit 1;
fi;
if test "${LD_LIBRARY_PATH}test" = "test"; then
   export LD_LIBRARY_PATH=$SICONOSPATH/lib/siconos-kernel:$SICONOSPATH/lib:$SICONOS_SHAREPATH:$NUMERICSPATH/lib/:/usr/local/lib;  
else
   export LD_LIBRARY_PATH=$SICONOSPATH/lib/siconos-kernel:$SICONOSPATH/lib:$SICONOS_SHAREPATH:$LD_LIBRARY_PATH:$NUMERICSPATH/lib:/usr/local/lib; 
fi;	 

if test "${silent}" = "false"; then
echo " ***** Siconos environment variables *****"
echo;
echo " --> SICONOSPATH is $SICONOSPATH"
echo " --> NUMERICSPATH is $NUMERICSPATH"
echo " --> LD_LIBRARY_PATH is $LD_LIBRARY_PATH"
echo;
fi;

# test if there are one or two argument. if not, exit
if [ $# -gt 2 ]; then
    echo "$0 : Two many arguments for siconos command.";
    exit 1;
fi;

if test "${silent}" = "true"; then	
# test if command file exist. if not, exit
if [ $# -eq 1 ]; then
    if [ ! -f $1 ]; then
	echo "$1: file not found.";
	sample="false"
	exit 1;
    else
	sample="true"
    fi;
fi;
fi;


if "$sample" = "true"; then
# plugin compilation
compilePlugins;
# sample compilation

args=$#          
lastarg=${!args}


DIR_SAMPLE=`dirname $lastarg`;


echo;

if [ ! -d $DIR_SAMPLE ]; then
    echo "/!\ Can not find sample location. /!\ ";
    exit 1;
else
    cd $DIR_SAMPLE;
    if test "${silent}" = "true"; then
	make -s -f $SICONOS_SHAREPATH/MakefilePluginSample OBJ=`basename $lastarg` $target
    else
	echo;
	echo " ***** Current sample compilation and linking *****"
	echo;
	make -f $SICONOS_SHAREPATH/MakefilePluginSample OBJ=`basename $lastarg` $target
    fi;
    cd $DIR;
fi;
fi;
fi;
exit 0;
