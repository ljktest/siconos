<!-- Siconos-Kernel version 2.1.1, Copyright INRIA 2005-2007.
<!-- Siconos is a program dedicated to modeling, simulation and control-->
<!-- of non smooth dynamical systems.	-->
<!-- Siconos is a free software; you can redistribute it and/or modify-->
<!-- it under the terms of the GNU General Public License as published by-->
<!-- the Free Software Foundation; either version 2 of the License, or-->
<!-- (at your option) any later version.-->
<!-- Siconos is distributed in the hope that it will be useful,-->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of-->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the-->
<!-- GNU General Public License for more details.-->
<!---->
<!-- You should have received a copy of the GNU General Public License-->
<!-- along with Siconos; if not, write to the Free Software-->
<!-- Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA-->
<!---->
<!-- Contact: Vincent ACARY vincent.acary@inrialpes.fr -->
<!--	-->
<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">


<!--~~~~~~~~~~~~~ Definitions of used types ~~~~~~~~~~~~~-->
<xsd:simpleType name="positiveDouble">
   	<xsd:restriction base="xsd:double">
		<xsd:minInclusive value="0"/>
   	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="boolean">
	<xsd:restriction base="xsd:boolean">
<!--		<xsd:enumeration value="true"/>
		<xsd:enumeration value="false"/>
-->	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleDSValues">
   	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="LagrangianDS"/>
		<xsd:enumeration value="LagrangianLinearTIDS"/>
		<xsd:enumeration value="LinearSystemDS"/>
		<xsd:enumeration value="NonLinearSystemDS"/>
	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleRelationValues">
  	<xsd:restriction base="xsd:string">
		<xsd:enumeration value="LL"/>
		<xsd:enumeration value="LNL"/>
		<xsd:enumeration value="LTI"/>
   	</xsd:restriction>
</xsd:simpleType>


<xsd:simpleType name="PossibleStrategyValues">
   	<xsd:restriction base="xsd:string">
	<xsd:enumeration value="TimeStepping"/>
	<xsd:enumeration value="EventDriven"/>
   	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleNSLawValues">
   	<xsd:restriction base="xsd:string">
	<xsd:enumeration value="Relay"/>
	<xsd:enumeration value="ComplementarityCondition"/>
	<xsd:enumeration value="NewtonImpactLaw"/>
   	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleOneStepIntegratorValues">
   	<xsd:restriction base="xsd:string">
	<xsd:enumeration value="Moreau"/>
	<xsd:enumeration value="Adams"/>
	<xsd:enumeration value="LSODAR"/>
   	</xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="PossibleOneStepNSProblemValues">
   <xsd:restriction base="xsd:string">
	<xsd:enumeration value="LCP"/>
	<xsd:enumeration value="QP"/>
	<xsd:enumeration value="Relay"/>
   </xsd:restriction>
</xsd:simpleType>

<xsd:simpleType name="BoundaryConditionValues">
   <xsd:restriction base="xsd:string">
	<xsd:enumeration value="Linear"/>
	<xsd:enumeration value="NLinear"/>
	<xsd:enumeration value="Periodic"/>
   </xsd:restriction>
</xsd:simpleType>



<xsd:simpleType name="doubleList">
	<xsd:list itemType="xsd:double"  /> <!-- use="optional"-->
</xsd:simpleType>

<xsd:simpleType name="intList">
	<xsd:list itemType="xsd:nonNegativeInteger"  /> <!-- use="optional"-->
</xsd:simpleType>


<xsd:simpleType name="pluginType">
	<xsd:restriction base="xsd:string">
	  <xsd:pattern value="[a-zA-Z0-9/.]+:[a-zA-Z0-9]+"/>
	</xsd:restriction>			  
</xsd:simpleType>


<xsd:complexType name="pluginDef">
	<xsd:simpleContent>
		<xsd:extension base="doubleList">
		<!--calculated with a plugin function -->
		<xsd:attribute name="plugin" type="pluginType"/>
		</xsd:extension>
	</xsd:simpleContent>
</xsd:complexType>	


<xsd:complexType name="vector">
	<xsd:simpleContent>
		<xsd:extension base="doubleList">
	     
		<!--Vector is defined in the tag -->
		<xsd:attribute name="vectorSize" type="xsd:nonNegativeInteger" use="optional"/>
		<!--Vector is defined in a file -->
		<xsd:attribute name="vectorFile" type="xsd:string" use="optional"/>
		<!--Vector is calculated with a plugin function -->
		<xsd:attribute name="vectorPlugin" type="pluginType" use="optional"/>

	  </xsd:extension>
	</xsd:simpleContent>
</xsd:complexType>

<!--   -->
<xsd:complexType name="matrix">
	<xsd:sequence>
		<xsd:element name="row" minOccurs="0" maxOccurs="unbounded" type="doubleList"/>
	</xsd:sequence>
	<!--Matrix is defined in the tag -->
	<xsd:attribute name="matrixColSize" type="xsd:nonNegativeInteger" use="optional"/>
	<xsd:attribute name="matrixRowSize" type="xsd:nonNegativeInteger" use="optional"/>
	<!--Matrix is defined in a file -->
	<xsd:attribute name="matrixFile" type="xsd:string" use="optional"/>
	<!--Matrix is calculated with a plugin function -->
	<xsd:attribute name="matrixPlugin" type="pluginType" use="optional"/>
</xsd:complexType>


<xsd:complexType name="matrixData">
	<xsd:sequence>
		<xsd:element name="row" minOccurs="0" maxOccurs="unbounded" type="doubleList"/>
	</xsd:sequence>
	<!--Matrix is defined in the tag -->
	<xsd:attribute name="matrixColSize" type="xsd:nonNegativeInteger" use="optional"/>
	<xsd:attribute name="matrixRowSize" type="xsd:nonNegativeInteger" use="optional"/>
</xsd:complexType>

<xsd:complexType name="matrixPlugin">
	<!--Matrix is calculated with a plugin function -->
	<xsd:attribute name="matrixPlugin" type="pluginType" use="optional"/>
</xsd:complexType>

<xsd:complexType name="matrixFile">
	<!--Matrix is defined in a file -->
	<xsd:attribute name="matrixFile" type="xsd:string" use="optional"/>
</xsd:complexType>

<!--   -->


<xsd:complexType name="memory">
	<xsd:sequence>
		<xsd:element name="Memory" minOccurs="0" maxOccurs="unbounded" type="vector"/>
	</xsd:sequence>
	<xsd:attribute name="sizeMax" type="xsd:nonNegativeInteger" use="required"/>
</xsd:complexType>


<!-- Time of the Model -->
<xsd:complexType name="ModelTime">
	<xsd:all>
		<xsd:element name="t" type="positiveDouble" minOccurs="0" maxOccurs="1"/>
		<xsd:element name="t0" type="positiveDouble" minOccurs="1" maxOccurs="1"/>
		<xsd:element name="T" type="positiveDouble" minOccurs="0" maxOccurs="1"/>
	</xsd:all>
</xsd:complexType>

<!-- Boundary Condition -->
<xsd:complexType name="BoundaryCondition">
<!--	<xsd:sequence> -->
<!--		<xsd:choice minOccurs='0' maxOccurs='1'>
			<xsd:element name="Linear">
				<xsd:complexType>
-->				<xsd:all>
					<xsd:element name="Omega" type="vector" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="Omega0" type="matrix" minOccurs="1" maxOccurs="1"/>
					<xsd:element name="OmegaT" type="matrix" minOccurs="1" maxOccurs="1"/>
				</xsd:all>
<!--				</xsd:complexType>
			</xsd:element>
			<xsd:element name="NLinear">
				<xsd:complexType>
				<xsd:all>
					<xsd:element name="empty1" type="positiveDouble" minOccurs="0" maxOccurs="1"/>
				</xsd:all>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Periodic">
				<xsd:complexType>
				<xsd:all>
					<xsd:element name="empty2" type="positiveDouble" minOccurs="0" maxOccurs="1"/>
				</xsd:all>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
-->	<xsd:attribute name="type" type="BoundaryConditionValues" use="required"/>
</xsd:complexType>




<!--~~~~~~ DS_Concerned for OneStepIntegrator~~~~~~~~-->
<xsd:complexType name="OSI_DS_ConcernedType">
	<xsd:sequence>
	<!--~~~~~~~~~  DS ~~~~~~~~~~-->
		<xsd:element name="DS" minOccurs="1" maxOccurs="unbounded">
			<xsd:complexType>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
			</xsd:complexType>
		</xsd:element>
	</xsd:sequence>
	<xsd:attribute name="size" type="xsd:positiveInteger" use="required"/>
<!--					   <xsd:keyref name="OneStepIntegratorDSKeyRef" refer="DSKey">
					        <xsd:selector xpath='DS'/>
					        <xsd:field xpath='@number'/>
					  </xsd:keyref>
-->
</xsd:complexType>



<!--~~~~~~ Interaction_Concerned ~~~~~~~~-->
<xsd:complexType name="InteractionConcernedType">
	<xsd:sequence>
	<!--~~~~~  Interaction ~~~~~-->
		<xsd:element name="Interaction" minOccurs="1" maxOccurs="unbounded">
		<xsd:complexType>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
		</xsd:complexType>
		</xsd:element>
	</xsd:sequence>
	<xsd:attribute name="size" type="xsd:positiveInteger" use="required"/>
<!--				   <xsd:keyref name="OneStepNSProblemInteractionKeyRef" refer="InteractionKey">
				        <xsd:selector xpath='Interaction'/>
				        <xsd:field xpath='@number'/>
				   </xsd:keyref>				   
-->
</xsd:complexType>
				
				


<!--~~~~~~~~~~~~~~~~~~~~~~~~ Model ~~~~~~~~~~~~~~~~~~~~~~~~~-->
<xsd:element name="SiconosModel">
	<xsd:complexType>
		<xsd:sequence>
				<xsd:element name="Title" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="Author" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="Description" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="Date" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				<xsd:element name="SchemaXML" type="xsd:string" minOccurs="1" maxOccurs="1"/>
	<!--~~~~~~~~~~~~~~~~~~~~~~~ Time ~~~~~~~~~~~~~~~~~~~~~~~~-->
	<xsd:element name="Time" type="ModelTime" minOccurs="1" maxOccurs="1"/>

   <!--~~~~~~~~~~~~~~~~~~~~~~ NSDS ~~~~~~~~~~~~~~~~~~~~~~~~~~-->

	<xsd:element name="NSDS" minOccurs="1" maxOccurs="1">
		<xsd:complexType>
			<xsd:sequence>

		<!--~~~~~~~~~~~~~ DS_Definition ~~~~~~~~~~~~~-->
		<xsd:element name="DS_Definition" minOccurs="1" maxOccurs="1">
			<xsd:complexType>
				<xsd:sequence>
		  <!--~~~~~~~~~~~~~~~~~ DS ~~~~~~~~~~~~~~~~~-->
		<xsd:choice minOccurs='0' maxOccurs='unbounded'>
			<xsd:element name="NonLinearSystemDS">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="n" type="xsd:positiveInteger" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="x" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDot" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDotMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x0" type="vector" minOccurs='1' maxOccurs='1'/>
						<xsd:element name="StepsInMemory" type="xsd:positiveInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="vectorField" type="pluginDef" minOccurs='1' maxOccurs='1'/>
						<xsd:element name="computeJacobianX" type="pluginDef" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="R" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="RMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						
						<xsd:element name="BoundaryCondition" type="BoundaryCondition" minOccurs='0' maxOccurs='1'/>
					</xsd:all>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
				</xsd:complexType>
			</xsd:element>
						
			<xsd:element name="LinearSystemDS">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="n" type="xsd:positiveInteger" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="x" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="xDot" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="xMemory" type="memory" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="xDotMemory" type="memory" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="x0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="StepsInMemory" type="xsd:positiveInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="vectorField" type="pluginDef" minOccurs="0" maxOccurs="0"/>
						<xsd:element name="computeJacobianX" type="pluginDef" minOccurs="0" maxOccurs="0"/>
						<xsd:element name="R" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="RMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						
						<xsd:element name="A" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="B" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="u" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="f" type="vector" minOccurs="1" maxOccurs="1"/>
						
						<xsd:element name="BoundaryCondition" type="BoundaryCondition" minOccurs='0' maxOccurs='1'/>
					</xsd:all>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
				</xsd:complexType>
			</xsd:element>
						
			<xsd:element name="LagrangianLinearTIDS">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="n" type="xsd:positiveInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDot" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDotMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x0" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="StepsInMemory" type="xsd:positiveInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="vectorField" type="pluginDef" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="computeJacobianX" type="pluginDef" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="R" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="RMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						
						<xsd:element name="ndof" type="xsd:integer" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="q" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="q0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="qMemory" type="memory" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="Velocity" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="Velocity0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="VelocityMemory" type="memory" minOccurs="0" maxOccurs="1"/>

<!--						<xsd:element name="Fint" type="vector" minOccurs='0' maxOccurs='0'/> -->
						<xsd:element name="Fext" type="vector" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="JacobianQFint" type="matrix" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="JacobianVelocityFint" type="matrix" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="JacobianQQNLInertia" type="matrix" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="JacobianVelocityQNLInertia" type="matrix" minOccurs='0' maxOccurs='0'/>

						<xsd:element name="M" type="matrix" minOccurs="1" maxOccurs="1"/>

<!--					<xsd:element name="QNLInertia" type="vector" minOccurs='0' maxOccurs='0'/>
-->	
						<xsd:element name="K" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="C" type="matrix" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="BoundaryCondition" type="BoundaryCondition" minOccurs='0' maxOccurs='1'/>

					</xsd:all>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
				</xsd:complexType>
			</xsd:element>
						
			<xsd:element name="LagrangianDS">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="n" type="xsd:positiveInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDot" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="xDotMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="x0" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="StepsInMemory" type="xsd:positiveInteger" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="vectorField" type="pluginDef" minOccurs='0' maxOccurs='0'/>
						<xsd:element name="computeJacobianX" type="pluginDef" minOccurs='0' maxOccurs='0'/>

						<xsd:element name="R" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="RMemory" type="memory" minOccurs='0' maxOccurs='1'/>
						
						<xsd:element name="ndof" type="xsd:integer" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="q" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="q0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="qMemory" type="memory" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="Velocity" type="vector" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="Velocity0" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="VelocityMemory" type="memory" minOccurs="0" maxOccurs="1"/>

						<xsd:element name="Fint" type="vector" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="Fext" type="vector" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="JacobianQFint" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="JacobianVelocityFint" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="JacobianQQNLInertia" type="matrix" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="JacobianVelocityQNLInertia" type="matrix" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="M" type="matrix" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="QNLInertia" type="vector" minOccurs="1" maxOccurs="1"/>

						<xsd:element name="BoundaryCondition" type="BoundaryCondition" minOccurs='0' maxOccurs='1'/>
					</xsd:all>
				<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
				</xsd:sequence> 
			</xsd:complexType>
		</xsd:element>



    <!--~~~~~~~~ Interaction_Definition ~~~~~~~~~~-->
		<xsd:element name="Interaction_Definition" minOccurs='0' maxOccurs="1">
			<xsd:complexType>
				<xsd:sequence>
		  <!--~~~~~~~~~~~ Interaction ~~~~~~~~~~~~~~~-->
			<xsd:element name="Interaction" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="nInter" type="xsd:positiveInteger" minOccurs="1" maxOccurs="1"/>	
						<xsd:element name="Status" type="intList" minOccurs="1" maxOccurs="1"/>
						<xsd:element name="Id" type="xsd:string" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="y" type="vector" minOccurs='0' maxOccurs='1'/>
						<xsd:element name="lambda" type="vector" minOccurs='0' maxOccurs='1'/>

					  <!--~~~~~~ DS_Concerned ~~~~~~-->
						<xsd:element name="DS_Concerned" minOccurs="1" maxOccurs="1">
							<xsd:complexType>
								<xsd:sequence>
									<!--~~~ Couples of DS ~~~~-->
									<xsd:element name="DS" minOccurs="1" maxOccurs="unbounded">
										<xsd:complexType>
											<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
											<xsd:attribute name="interactsWithDS_Number" type="xsd:positiveInteger" use="required"/>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
								<xsd:attribute name="size" type="xsd:positiveInteger" use="required"/>
							</xsd:complexType>
<!--							<xsd:keyref name="InteractionDSKeyRef" refer="DSKey">
									<xsd:selector xpath='DS'/>
									<xsd:field xpath='@number'/>
									<xsd:field xpath='@interactsWithDS_Number'/>
									</xsd:keyref>
-->
						</xsd:element>


				<!--~~~~~~~~ Relation ~~~~~~~~-->
				<xsd:element name="Interaction_Content" minOccurs="1" maxOccurs="1">
					<xsd:complexType>
					<xsd:sequence>
						<xsd:choice minOccurs="1" maxOccurs="1">
							<xsd:element name="LTI">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="computeInput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="C" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="D" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="E" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="a" type="vector" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
		
							<xsd:element name="LL">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="computeInput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs='0' maxOccurs='0'/>
										<xsd:element name="H" type="matrix" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="b" type="vector" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
							
							<xsd:element name="LNL">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="computeInput" type="pluginDef" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="computeOutput" type="pluginDef" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
						</xsd:choice>
					

			<!--~~~~~~~ NS_Law ~~~~~~~~~~~-->
						<xsd:choice minOccurs="1" maxOccurs="1">
							<xsd:element name="Relay">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="c" type="xsd:double" minOccurs="1" maxOccurs="1"/>
										<xsd:element name="d" type="xsd:double" minOccurs="1" maxOccurs="1"/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
							
							<xsd:element name="NewtonImpactLaw">
								<xsd:complexType>
									<xsd:all>
										<xsd:element name="e" type="xsd:double" minOccurs='1' maxOccurs='1'/>
									</xsd:all>
								</xsd:complexType>
							</xsd:element>
							
							<xsd:element name="ComplementarityCondition">
<!--								<xsd:complexType>
									<xsd:all>
										<xsd:element name="empty" type="xsd:double" minOccurs='0' maxOccurs='0'/>
									</xsd:all>
								</xsd:complexType> -->
							</xsd:element>
						</xsd:choice>
					</xsd:sequence>
					</xsd:complexType>
				</xsd:element>

					</xsd:all>
					<xsd:attribute name="number" type="xsd:positiveInteger" use="required"/>
<!--			  		<xsd:attribute name="isActive" type="boolean" use="optional"/>  -->
				</xsd:complexType>
		
<!--		     <xsd:key name="InteractionKey">
		        <xsd:selector xpath='Interaction'/>
		        <xsd:field xpath='@number'/>
		     </xsd:key>
-->
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

				</xsd:sequence>
			<xsd:attribute name="bvp" type="boolean" use="optional"/>
		</xsd:complexType>
	</xsd:element>


    <!--~~~~~~~~~~~~~~~~~~~~ Strategy ~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<xsd:element name="Strategy" minOccurs='0' maxOccurs="1">
		<xsd:complexType>
			<xsd:sequence>
	    
	    	<!--~~~~~~~~~~~~ TimeDiscretisation ~~~~~~~~~~~-->
			<xsd:element name="TimeDiscretisation" minOccurs='1' maxOccurs='1'>
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="h" type="positiveDouble" minOccurs='0' maxOccurs="1"/>
						<xsd:element name="N" type="xsd:positiveInteger" minOccurs='0' maxOccurs="1"/>
						<xsd:element name="tk" type="vector" minOccurs='0' maxOccurs="1"/>
						<xsd:element name="hMin" type="positiveDouble" minOccurs='0' maxOccurs="1"/>
						<xsd:element name="hMax" type="positiveDouble" minOccurs='0' maxOccurs="1"/>
					</xsd:all>
					<xsd:attribute name="isConstant" type="boolean" use="required"/>
				</xsd:complexType>
			</xsd:element>

			<!--~~~~~~~ OneStepIntegrator_Definition ~~~~~~~-->
			<xsd:element name="OneStepIntegrator_Definition" minOccurs='1' maxOccurs="1">
				<xsd:complexType>
					<xsd:sequence>
		   <!--~~~~~~~~~~~ OneStepIntegrator ~~~~~~~~~~~-->
			<xsd:choice minOccurs='1' maxOccurs='unbounded'>
				<xsd:element name="Moreau">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="DS_Concerned" type="OSI_DS_ConcernedType" minOccurs='1' maxOccurs="1"/>
							<xsd:element name="r" type="xsd:integer"  minOccurs='1' maxOccurs="1"/>
							<xsd:element name="Theta" type="positiveDouble" minOccurs="1" maxOccurs="1"/>
							<xsd:element name="W" type="matrix" minOccurs="0" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
				
				<xsd:element name="Adams">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="DS_Concerned" type="OSI_DS_ConcernedType" minOccurs="1" maxOccurs="1"/>
							<xsd:element name="r" type="xsd:integer" minOccurs="1" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
				
				<xsd:element name="LSODAR">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="DS_Concerned" type="OSI_DS_ConcernedType" minOccurs="1" maxOccurs="1"/>
							<xsd:element name="r" type="xsd:integer" minOccurs="0" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
						
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>


 		<!--~~~~~~~~~~~~~ OneStepNSProblem ~~~~~~~~~~~~~~-->
	<xsd:element name="OneStepNSProblem" minOccurs="0" maxOccurs="1">
	<xsd:complexType>
		<xsd:sequence>
	 		<xsd:choice minOccurs="1" maxOccurs="1">
				<xsd:element name="LCP">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="n" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="M" type="matrix" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="q" type="vector" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="Interaction_Concerned" type="InteractionConcernedType" minOccurs="1" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
	
				<xsd:element name="QP">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="n" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="Q" type="matrix" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="p" type="vector" minOccurs="0" maxOccurs="1"/>
							<xsd:element name="Interaction_Concerned" type="InteractionConcernedType" minOccurs="1" maxOccurs="1"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="Solver" minOccurs="0" maxOccurs="1">
				<xsd:complexType>
				<xsd:all>
					<!-- to be defined -->
					<xsd:element name="Lib" type="xsd:string" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="Algo" type="xsd:string" minOccurs="0" maxOccurs="1"/>
				</xsd:all>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	</xsd:element>
	
			</xsd:sequence>
			<xsd:attribute name="type" type="PossibleStrategyValues" use="required"/>
		</xsd:complexType>
	</xsd:element>


			</xsd:sequence>
			
		</xsd:complexType>
	</xsd:element>
	
</xsd:schema>
