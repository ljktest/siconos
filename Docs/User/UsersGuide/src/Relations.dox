/*! \page relationsInSiconos Relations

\b What \b is \b a \b Relation? \n

Relations are used to link local variables of the Interaction and global variables of the DynamicalSystems, and thus define constraints in the systems. \n

\b Building \b a \b Relation ?\n

Relation class is an abstract class which provides a generic interface for all types of relations. \n
Each relation has a type which correspond to the types of dynamical systems they fit with (FirstOrder or Lagrangian), a sub-type, (linear, non linear, scleronomous...).
Usually, "type+subtype" corresponds more or less to the name of the derived class. su\n
Then, depending on the sub-class, each relation holds some plug-in functions or operators used to define the constraints. They are listed below for each available type of relation. 

\b Available \b classes: Relation, FirstOrderR, FirstOrderLinearR, FirstOrderLinearTIR, LagrangianR, LagrangianRheonomousR, \n
LagrangianScleronomousR, LagrangianCompliantR, LagrangianLinearR.

\image html classRelation.png
\image latex classRelation.eps "" width=10cm


\section docRelationNL First Order Relations

\subsection docRelationFOR First Order Non Linear Relations. 

\b class: FirstOrderR

\f{eqnarray*}
output &= y =& h(X,t,\lambda,Z)\\
input &= R =& g(X,t,\lambda,Z)
\f}

We denote: 
\f{eqnarray*}
 H_0(X,t,\lambda,Z)=\nabla_X h(X,t,\lambda,Z)&, &  H_1(X,t,\lambda,Z)=\nabla_{\lambda} h(X,t,\lambda,Z) \\
\\
 G_0(X,t,\lambda,Z)=\nabla_X g(X,t,\lambda,Z)&, &  G_1(X,t,\lambda,Z)=\nabla_{\lambda} g(X,t,\lambda,Z) 
\f}

h, g (and their jacobian according to X and lambda) are defined with some plug-in functions. \n
See the doxygen documentation of the class to have a list of the set/get/compute functions.

<em> Note: for the signification of X, Z, R see \ref doc_Interactions </em>

\subsection docRelationFOLR First Order Linear Relations
\b Class: FirstOrderLinearR 

\f{eqnarray*}
y &=& C(t,Z)X + F(t,Z)Z + D(t,Z) \lambda + e(t,Z) \\
R &=& B(t,Z) \lambda
\f}

Plug-in functions are available for all operators.

\subsection docRelationFOLTIR First Order Linear Relations with Time Invariant Coefficients

\b Class FirstOrderLinearTIR 

\f{eqnarray*}
y &=& CX + FZ + D\lambda + e \\
R &=& B \lambda
\f}

\section docRelationLag Lagrangian (second order) Relations

\subsection docRelationLSR Lagrangian Scleronomous Relations
\b Class: LagrangianScleronomousR

The constraints depend only on the state,
 \f{eqnarray*}
y &=& h(Q,Z) \\
\dot y &=& G_0(Q,Z)\dot Q \\
P &=& G_0^t(Q,Z)\lambda 
\f}
with 
\f[
G_0(Q,Z) = \nabla_Q h(Q,Z)
\f]

\subsection docRelationLRR Lagrangian Rheonomous Relations
\b Class: LagrangianRheonomousR

The constraints depend on time and state, 
\f{eqnarray*}
y &=& h(Q,t,Z)\\
\dot y &=& G_0(Q,t,Z)\dot Q + \frac{\partial h}{\partial t}(Q,t,Z) \\
P &=& G_0^t(Q,t,Z)\lambda 
\f}
 with 
 \f{eqnarray*} 
 G_0(Q,t,Z) = \nabla_Q h(Q,t,Z)  \\
 hdot(Q,t,Z) = \frac{\partial h}{\partial t}(Q,t,Z) 
 \f}

\subsection docRelationLCR Lagrangian Compliant Relations
\b Class: LagrangianCompliantR

The constraints depends on state and \f$ \lambda \f$, whith a function of time for which \f$ \dot \lambda(t)\f$ has sense.
\f{eqnarray*}
y &=& h(Q,\lambda(t),Z) \\
\dot y &=& G_0(Q,\lambda(t),Z)\dot Q + G_1(Q,\lambda(t),Z)\dot\lambda(t) \\
P &=& G_0^t(Q,\lambda(t),Z)\lambda(t) 
\f}
with 
\f[ 
G_0(Q,\lambda(t),Z) = \nabla_q h(Q,\lambda(t),Z) 
\f]
\f[
G_1(Q,\lambda(t),Z) = \nabla_{\lambda(t)}h(Q,\lambda(t),Z)
\f]

\subsection docRelationLLTIR Lagrangian Linear and Time Invariant Coefficients
\b Class:  LagrangianLinearR

Lagrangian linear relations with time-invariant coefficients. 
 \f{eqnarray*}
 y&=& H Q + b + D\lambda +FZ \\
 P &=& H^t \lambda 
 \f}

\section doc_relPlugIn Relations plug-in functions

FirstOrderR: \f$ h(X,t,\lambda,Z), \ \ g(\lambda,t,Z) \f$.\n
FirstOrderLinearR: \f$ C(t,Z), \ \ F(t,Z), \ \ , D(t,Z), \ \ e(t,Z), B(t,Z) \f$.\n
LagrangianScleronomousR: \f$ h(Q,Z), \ \ G_0(Q,Z) \f$. \n
LagrangianRheonomousR: \f$  h(Q,t,Z), \ \ G_0(Q,t,Z), \ \ hdot(Q,t,Z) \f$.\n
LagrangianCompliantR:  \f$  h(Q,\lambda,Z), \ \ G_0(Q,\lambda,Z), \ \ G_1(Q,\lambda,Z) \f$.

*/
