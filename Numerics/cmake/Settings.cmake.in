# -*- cmake -*-

IF(NOT SICONOS_PREFIX)
  message(FATAL_ERROR "Undefined SICONOS_PREFIX")
ENDIF()

# broken atlas/cblas.h and atlas/clapack.h on some distribs (Debian)
SET(COMPILE_TIME_ATLAS_INCLUDE_PATH @ATLAS_INCLUDE_PATH@)

# a build with atlas
IF(COMPILE_TIME_ATLAS_INCLUDE_PATH)
  IF(COMPILE_TIME_ATLAS_INCLUDE_PATH MATCHES @CMAKE_SOURCE_DIR@)
    SET(PROJECT_INCLUDE_DIRECTORIES ${SICONOS_PREFIX}/include/Siconos/@PROJECT_SHORT_NAME@/AtlasLocal;${SICONOS_PREFIX}/include/Siconos/@PROJECT_SHORT_NAME@/AtlasLocal/atlas;@MY_AT@CHECKED_@PROJECT_NAME@_INCLUDE_DIRECTORIES@MY_AT@;${SICONOS_PREFIX}/@@PROJECT_NAME@_INSTALL_INCLUDE_DIR@;)
  ELSE(COMPILE_TIME_ATLAS_INCLUDE_PATH MATCHES @CMAKE_SOURCE_DIR@)
    SET(PROJECT_INCLUDE_DIRECTORIES @MY_AT@CHECKED_@PROJECT_NAME@_INCLUDE_DIRECTORIES@MY_AT@;${SICONOS_PREFIX}/@@PROJECT_NAME@_INSTALL_INCLUDE_DIR@;)
  ENDIF(COMPILE_TIME_ATLAS_INCLUDE_PATH MATCHES @CMAKE_SOURCE_DIR@)

# without atlas
ELSE(COMPILE_TIME_ATLAS_INCLUDE_PATH)
  SET(PROJECT_INCLUDE_DIRECTORIES @MY_AT@CHECKED_@PROJECT_NAME@_INCLUDE_DIRECTORIES@MY_AT@;${SICONOS_PREFIX}/@@PROJECT_NAME@_INSTALL_INCLUDE_DIR@;)
ENDIF(COMPILE_TIME_ATLAS_INCLUDE_PATH)

# Release, Debug, etc.
# Having the same build-type is important for MSVC
SET(CMAKE_BUILD_TYPE @CMAKE_BUILD_TYPE@)

SET(PROJECT_LINK_DIRECTORIES @@PROJECT_NAME@_LINK_DIRECTORIES@;${SICONOS_PREFIX}/@@PROJECT_NAME@_INSTALL_LIB_DIR@;)

SET(HAS_MPI @CONFIG_H_MPI_CONFIGURED@)
SET(MPI_LIBRARY_LINK @MPI_LIBRARY@;@MPI_EXTRA_LIBRARY@)

SET(PROJECT_LINK_LIBRARIES ${SICONOS_PREFIX}/@MY_AT@@PROJECT_NAME@_INSTALL_LIB_DIR@MY_AT@/@SiconosNumerics_LIBRARY_NAME@;${SICONOS_PREFIX}/@MY_AT@@PROJECT_NAME@_INSTALL_LIB_DIR@MY_AT@/@MY_AT@@PROJECT_NAME@_SHARED_LIB_NAME@)

IF(HAS_MPI)
  LIST(APPEND PROJECT_LINK_LIBRARIES "${MPI_LIBRARY_LINK}")
ENDIF(HAS_MPI)

IF(CMAKE_CROSSCOMPILING)
  SET(CMAKE_FIND_ROOT_PATH @CMAKE_INSTALL_PREFIX@ @CMAKE_FIND_ROOT_PATH@)
  IF(CMAKE_SYSTEM_NAME MATCHES "Windows")
    SET(CROSSCOMPILING_LINUX_TO_WINDOWS TRUE)
  ENDIF()
ENDIF()

IF(CMAKE_SYSTEM_NAME MATCHES Windows)
  IF (NOT MINGW)
    SET(CMAKE_FIND_LIBRARY_PREFIXES @CMAKE_FIND_LIBRARY_PREFIXES@)
    SET(CMAKE_FIND_LIBRARY_SUFFIXES @CMAKE_FIND_LIBRARY_SUFFIXES@)
  ENDIF()
  SET(EXE_EXT ".exe")
ELSE()
  SET(EXE_EXT)
ENDIF()

SET(COMPILE_TIME_CXX_FLAGS "@CMAKE_CXX_FLAGS_FILTERED@")
SET(COMPILE_TIME_C_FLAGS "@CMAKE_C_FLAGS_FILTERED@")
SET(COMPILE_TIME_Fortran_FLAGS "@CMAKE_Fortran_FLAGS@")

SET(USE_LIBCXX @USE_LIBCXX@)
IF(USE_LIBCXX)
  SET(COMPILE_TIME_CXX_FLAGS "${COMPILE_TIME_CXX_FLAGS} -stdlib=libc++ -I@USE_LIBCXX@/include -I@USE_LIBCXX@/include/c++/v1")
  SET(_LIBCXX_FLAGS_TO_ADD "-L@USE_LIBCXX@/lib -lc++abi -Wl,-rpath,@USE_LIBCXX@/lib")
  SET(COMPILE_TIME_EXE_LINKER_FLAGS "${_LIBCXX_FLAGS_TO_ADD}")
  SET(COMPILE_TIME_MODULE_LINKER_FLAGS "${_LIBCXX_FLAGS_TO_ADD}")
  SET(COMPILE_TIME_SHARED_LINKER_FLAGS "${_LIBCXX_FLAGS_TO_ADD}")
ENDIF(USE_LIBCXX)


