# ------------------------
#  doxygen documentation
# ------------------------
#
#  http://www.swig.org/Doc2.0/SWIG.html
#  5.1.3 Comments
#  
#  C and C++ style comments may appear anywhere in interface files. In
#  previous versions of SWIG, comments were used to generate
#  documentation files. However, this feature is currently under repair
#  and will reappear in a later SWIG release.
#
#  This is a workaround:
#
# include this file in CMakeLists.txt to generate .i files 
# used by swig to produce docstrings documentation.
# 
# Using this will create targets numerics_docstrings and kernel-docstrings.
# Running this target will :
#   - Generate xml (doxygen) files for all Numerics and Kernel headers
#   - Use doxy2swig to produce the corresponding .i files
#
#
# Numerics-docstrings.i/Kernel-docstrings.i files will be generated and should be included
# in your main swig file (i.e Numerics.i or Kernel.i)
#
# Remark : Kernel related files will be generated only if WITH_KERNEL option is ON.
#

find_package(Doxygen REQUIRED)

if(DOXYGEN_FOUND)
  # set xml options configuration file
  set(XML_DOXY_CONFIG "${CMAKE_CURRENT_BINARY_DIR}/xml_doxy.config")
  # set output directory for documentation
  set(DOXYGEN_OUTPUT ${CMAKE_CURRENT_BINARY_DIR})
  # Run xml process in the binary dir
  if(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/FrontEnd/xml/Model_8hpp.xml) 
    configure_file(xml_doxy.config.in ${CMAKE_CURRENT_BINARY_DIR}/xml_doxy.config)
    execute_process(COMMAND ${DOXYGEN_EXECUTABLE} ${XML_DOXY_CONFIG} WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
  endif()

  # find all siconos headers
  file(GLOB _HDRS ${SiconosNumerics_INCLUDE_DIRS}/*.h)
  if(WITH_KERNEL)
    file(GLOB _HPPDRS ${SiconosKernel_INCLUDE_DIRS}/*.hpp)
  endif()
  
   # for each header find the associated xmls generated by doxygen
  foreach(_F ${_HDRS} ${_HPPDRS})
    get_filename_component(_FWE ${_F} NAME_WE)
    file(GLOB ${_FWE}_XMLS  ${CMAKE_CURRENT_BINARY_DIR}/FrontEnd/xml/class${_FWE}.xml  ${CMAKE_CURRENT_BINARY_DIR}/FrontEnd/xml/${_FWE}_8h.xml )
  endforeach(_F ${_HDRS} ${_HPPDRS})

  set(NUMERICS_DOCSTRINGS_FILES)
  foreach(_F ${_HDRS})
    get_filename_component(_FWE ${_F} NAME_WE)
    foreach(_FXML ${${_FWE}_XMLS})
      get_filename_component(_FWE_XML ${_FXML} NAME_WE)
      add_custom_command(OUTPUT ${_FWE_XML}.i 
        DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/FrontEnd/xml/${_FWE_XML}.xml
        COMMAND ./doxy2swig.py ${CMAKE_CURRENT_BINARY_DIR}/FrontEnd/xml/${_FWE_XML}.xml ${_FWE_XML}.i
        COMMENT "docstrings generation for ${_FWE} (parsing ${_FWE_XML}.xml)")
      add_custom_target(doc_${_FWE_XML}.i DEPENDS ${_FWE_XML}.i)
      list(APPEND NUMERICS_DOCSTRINGS_FILES ${_FWE_XML}.i)
    endforeach(_FXML ${${_FWE}_XMLS})
  endforeach(_F ${_HDRS})

  # A command to generate input ".i" file for swig, for docstrings
  add_custom_command(OUTPUT Numerics-docstrings.i
    DEPENDS ${NUMERICS_DOCSTRINGS_FILES}
    COMMAND cat ${NUMERICS_DOCSTRINGS_FILES} > Numerics-docstrings.i
    COMMENT "Numerics docstrings concatenation")
  # The target associated with Numerics-docstrings command above
  add_custom_target(numerics_docstrings ALL DEPENDS Numerics-docstrings.i)
  
  if(WITH_KERNEL)
    set(KERNEL_DOCSTRINGS_FILES)
    foreach(_F ${_HPPDRS})
      get_filename_component(_FWE ${_F} NAME_WE)
      foreach(_FXML ${${_FWE}_XMLS})
	get_filename_component(_FWE_XML ${_FXML} NAME_WE)
	add_custom_command(OUTPUT ${_FWE_XML}.i 
          DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/FrontEnd/xml/${_FWE_XML}.xml
          COMMAND ./doxy2swig.py ${CMAKE_CURRENT_BINARY_DIR}/FrontEnd/xml/${_FWE_XML}.xml ${_FWE_XML}.i
          COMMENT "docstrings generation for ${_FWE} (parsing ${_FWE_XML}.xml)")
	add_custom_target(doc_${_FWE_XML}.i DEPENDS ${_FWE_XML}.i)
	list(APPEND KERNEL_DOCSTRINGS_FILES ${_FWE_XML}.i)
      endforeach(_FXML ${${_FWE}_XMLS})
    endforeach(_F ${_HPPDRS})
    # A command to generate input ".i" file for swig, for docstrings
    add_custom_command(OUTPUT Kernel-docstrings.i
      DEPENDS ${KERNEL_DOCSTRINGS_FILES}
      COMMAND cat ${KERNEL_DOCSTRINGS_FILES} > Kernel-docstrings.i
      COMMENT "Kernel docstrings concatenation")
    add_custom_target(kernel_docstrings ALL DEPENDS Kernel-docstrings.i)
  endif()

  # copy exe file used to generate docstrings with swig to binary dir
  configure_file(doxy2swig.py  ${CMAKE_CURRENT_BINARY_DIR}/doxy2swig.py COPYONLY)

endif() # End of doxygen 

